// Урок 1 - Что такое функция в JS-----------------------------------------------------------------------------------------

// функции - блок кода, который можно выполнять многократно

// одинаковые блоки можно оптимизировать

let a = 5
let b = 3

function sum(a, b) {
    const c = a + b
    console.log(c)
}

sum(a, b)

a = 8
b = 12

sum(a, b)

// Тем самым функции позволяют вычислять значения с разными параметрами

// Виды функций

// именованная.присвоенная переменной.анонимной.аргументом при вызове другой функции.значением свойства метода объекта

// функция в JS это объект

function myFn(a, b) {
    let c
    a = a + 1
    c = a + b
    return c
}

console.dir(myFn)

// Урок 2 - Объявление и вызов функции-----------------------------------------------------------------------------------------

// Имя.параметры.тело функции.результат

// Если нет ключевого слова return - вернётся undefined

// Вызов функции, по имени myFn(1, 2) - в скобках находятся параметры, значения передаются в момент выдачи функции

// При вызове функции параметрам присваиваются значения-объявляется переменная c-значение a увеличивается на 1-сумма значений присваивается с-возвращаеся значение с

// Самая короткая функция function myFn() {}

// Урок 3 - Передача значения по ссылке-----------------------------------------------------------------------------------------

const personOne = {
    name: 'Bob',
    age: 21
}
// Функция мутирует внешний объект
function increasePersonAge(person) {
    person.age += 1
    return person
}

increasePersonAge(personOne)
console.log(personOne.age)

// Внутри функции можно создавать копии объекта

function increasePersonAge2(person) {
    const updatedPerson = Object.assign({}, person)
    updatedPerson.age += 1
    return updatedPerson
}

const updatedPersonOne = increasePersonAge2(personOne)

console.log(personOne.age)
console.log(updatedPersonOne.age)

// Урок 4 - Колбэк функции-----------------------------------------------------------------------------------------
    
// Одна функция вызывает другую функцию - смысл
function anotherFunction() {} // коллбэк функция, которая передаётся как аргумент в другую функцию
function fnWithCallback(callbackFunction) { // В теле этой функции вызывается коллбэк функция
    callbackFunction()
}
fnWithCallback(anotherFunction)

// Пример: 

function printMyName() { //коллбэк функция - одна функция вызывает другую
    console.log('Sergey')
}

setTimeout(printMyName, 2000)

// Урок 5 - Правила работы с функциями-------------------------------------------------------------------------------

// Называть функции исходя из выполняемых задач
// Одна функция выполняет одну задачу
// Не рекомендуется изменять внешние относительно функции переменные - чистая функция