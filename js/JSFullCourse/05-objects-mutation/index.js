// Урок 1 - Мутация в JS-----------------------------------------------------------------------------------------

// Копирование значения для примитивных типов

const a = 10

let b = a // на данном этапе идёт копирование значения из одной переменной в другую

b = 30

console.log(a)

console.log(b)
    
// Для значений ссылочного типа

const person = {
    name: 'Bob',
    age: 21
}

person.age = 22
person.isAdult = true

console.log(person.age)

console.log(person.isAdult)
    
// меняя значения свойств мы мутируем объект
    
// даже если мы сделаем переприсвоим переменную, так как объект это ссылочный тип, будет снова мутация первоначального объекта

const person3 = {
    name: 'Bob',
    age: 25
}

const person4 = person3

person4.age = 26
person4.isAdult = true

console.log(person3.name)

console.log(person3.isAdult)

// это называется мутирование объекта через копию (копирование ссылки)

// Урок 2 - Как избежать мутаций-----------------------------------------------------------------------------------------

const person0 = {
    name: 'Sergey',
    age: 30
}

const personNew = Object.assign({}, person0) // данный метод глобального объекта, объекта Object - создаёт новый пустой объект и копирует туда свойства другого объекта

personNew.name = 'Dima'
personNew.age = 23

console.log(person0)
console.log(personNew)

// Это не глубокое копирование, только для корневого уровня, если есть вложенные объекты, то ссылки на них сохранятся
    
// Тоже самое будет если { ...person0 } - высыпаем свойства и засыпаем в новый объект
    
// Кроме этого есть способ для глубокого копирования - с двойной конвертации

// JSON.parse(JSON.stringify(person0)) - создаётся ПОЛНОСТЬЮ новый объект - новый вариант будет без изменений




