// Урок 1 - Функциональные выражения------------------------------------------------------------------------------------

// Объвленная функция имеет имя, параметры, return, можно использовать где угодно в коде

// Функциональное выражение не имеет имени, остальное не отличается никак - то есть они анонимные, но можно присваивать переменной

// И то, и другое можно использовть как колбэк функцию

// Присваивание анонимного функционального выражения переменной

const myFunction = function (a, b) {
    let c
    a = a + 1
    c = a + b
    return c
}

myFunction(5, 3)

// Функциональное выражение в вызове другой функции
// Отложенное сообщение будет выведено в консоль через 2000мс
setTimeout(function () {
    console.log('Отложенное сообщение')
}, 2000)

// Урок 2 - Стрелочные функции------------------------------------------------------------------------------------------

// Без ключевого слова function, но есть =>

// Cтрелочные функции анонимные, чтобы дать ей имя надо присвоить её переменной

const myF = (a, b) => {
    let c
    a = a + 1
    c = c + b
    return c
}

myF(5, 3) // 9

// Можно ли использовать стрелочную функцию в вызове другой функции

setTimeout(() => {
    console.log('Отложенное сообщение')
})

// Сокращение в стрелочных функциях

// Если один параметр, то круглые скобки можно опустить

a => {
    // тело функции
}

(a, b) => a + b // фигурные скобки можно также опускать и неявно возвращает результат выражения

// Урок 3 - Значения параметров функции по умолчанию--------------------------------------------------------------------

function multByFactor(value, multiplier = 1) {
    return value * multiplier
}

multByFactor(10,2)

//(value, multiplier = 1) => value * multiplier

// Пример 2

const newPost = (post, addedAt = Date()) => ({
    ...post,
    addedAt,
})

// Значение по умолчанию вычисляется в момент вызова функции

const firstPost = {
    id: 1,
    author: 'Bogdan',
}

newPost(firstPost)